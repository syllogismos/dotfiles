"" Vundle settings begin github.com/VundleVim/Vundle.vim
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'python-mode/python-mode'
"Plugin 'vim-syntastic/syntastic'
"Plugin 'davidhalter/jedi-vim'

call vundle#end()
filetype plugin indent on






" Make Vim more useful
set nocompatible
" Use the OS clipboard by default
set clipboard=unnamed
" Enhance command-line completion
set wildmenu
" Allow cursor keys in insert mode
set esckeys
" Allow backspace in insert mode
set backspace=indent,eol,start
" Optimize for fast terminal connections
set ttyfast
" Add the g flag to search/replace by default
set gdefault
" Use UTF-8 without BOM
set encoding=utf-8 nobomb
" Change mapleader
let mapleader=","
" Don't add empty newlines at the end of files
set binary
set noeol
" Respect modeline in files
set modeline
set modelines=4

" Enable per-directory .vimrc files and disable unsafe commands
" in them
set exrc
set secure
" Enable line numbers
set number
" Enable Syntax highlighting
syntax on
" Highlight current line
set cursorline
" Make tabs as wide as 4 spaces
set tabstop=4
" Other tab settings
set smartindent shiftwidth=4 softtabstop=4 expandtab
" Show invisible characters
set lcs=tab:▸\ ,trail:·,eol:¬,nbsp:_
set list
" Highlight searches
set hlsearch
" Ignore case of searches
set ignorecase
" Highlight dynamically as pattern is typed
set incsearch
" Always shwo status line
set laststatus=2
" Enable mouse in all modes
" set mouse=a
" Disable error bells
set noerrorbells
" Don't reset cursor to start of line when moving around
set nostartofline
" Show the cursor position
set ruler
" Don't show the intro message when starting vim
set shortmess=atI
" Show the current mode
set showmode
" Show the filename in the window titlebar
set title
" Show the partial commad as it's being typed
set showcmd
" Use relative line numbers
if exists("&relativenumber")
    set relativenumber
    au BufReadPost * set relativenumber
endif
" Start scrolling three lines before the horizontal window bar
set scrolloff=3

"Strip trailing whitespace (,ss)
function! StripWhitespace()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    :%s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfunction

noremap <leader>ss :call StripWhitespace()<CR>

" Automatic commands
if has("autocmd")
    " Enable file type detection
    filetype on
    " Treat .json files as .js
    autocmd BufNewFile, BufRead *.json setfiletype json syntax=javascript
    " Treat .md fiels as Markdown
    autocmd BufNewFile, BufRead *.md setlocal filetype=markdown
endif

" http://stackoverflow.com/questions/9850360/what-is-netrwhist
let g:netrw_dirhistmax=0

" mapping jk and kj to to get to normal mode from insert mode
inoremap jk <esc>
inoremap kj <esc>

" map ,, for completions, intellisense of sorts
inoremap ,,  <C-p>

" map spacebar to save current file in normal mode
noremap <Space> :w<Esc>

" set working directory in the current file
" set autochdir

" iterm background in vim
" http://stackoverflow.com/questions/21572179/vim-color-scheme-overriding-the-background-settings-in-gnome-terminal
hi Normal ctermbg=none


" Maping Ctrl n to nerdtree toggle
map <C-n> :NERDTreeToggle<CR>

map <leader>ev :vsplit ~/.vimrc<cr>

nnoremap ,cd :cd %:p:h<CR>:pwd<CR>

set path+=**

" python-mode settings
let g:pymode_paths=['', '/Users/anil/anaconda2/lib/python27.zip', '/Users/anil/anaconda2/lib/python2.7', '/Users/anil/anaconda2/lib/python2.7/plat-darwin', '/Users/anil/anaconda2/lib/python2.7/plat-mac', '/Users/anil/anaconda2/lib/python2.7/plat-mac/lib-scriptpackages', '/Users/anil/anaconda2/lib/python2.7/lib-tk', '/Users/anil/anaconda2/lib/python2.7/lib-old', '/Users/anil/anaconda2/lib/python2.7/lib-dynload', '/Users/anil/anaconda2/lib/python2.7/site-packages', '/Users/anil/anaconda2/lib/python2.7/site-packages/Sphinx-1.5.1-py2.7.egg', '/Users/anil/anaconda2/lib/python2.7/site-packages/aeosa', '/Users/anil/anaconda2/lib/python2.7/site-packages/protobuf-3.1.0-py2.7.egg', '/Users/anil/anaconda2/lib/python2.7/site-packages/setuptools-27.2.0-py2.7.egg', '/Users/anil/anaconda2/lib/python2.7/site-packages/xgboost-0.6-py2.7.egg', '/Users/anil/anaconda2/lib/python2.7/site-packages/torchvision-0.1.7-py2.7.egg']
                     
let g:pymode_lint_checkers=['pep8']
let g:pymode_lint_ignore="E401,E501,E731"
let g:pymode_rope=0

noremap  <buffer> <silent> k gk
noremap  <buffer> <silent> j gj


noremap <silent> <Leader>w :call ToggleWrap()<CR>
function ToggleWrap()
  if &wrap
    echo "Wrap OFF"
    setlocal nowrap
    set virtualedit=all
    silent! nunmap <buffer> <Up>
    silent! nunmap <buffer> <Down>
    silent! nunmap <buffer> <Home>
    silent! nunmap <buffer> <End>
    silent! iunmap <buffer> <Up>
    silent! iunmap <buffer> <Down>
    silent! iunmap <buffer> <Home>
    silent! iunmap <buffer> <End>
  else
    echo "Wrap ON"
    setlocal wrap linebreak nolist
    set virtualedit=
    setlocal display+=lastline
    noremap  <buffer> <silent> k gk
    noremap  <buffer> <silent> j gj
    noremap  <buffer> <silent> <Up>   gk
    noremap  <buffer> <silent> <Down> gj
    noremap  <buffer> <silent> <Home> g<Home>
    noremap  <buffer> <silent> <End>  g<End>
    inoremap <buffer> <silent> <Up>   <C-o>gk
    inoremap <buffer> <silent> <Down> <C-o>gj
    inoremap <buffer> <silent> <Home> <C-o>g<Home>
    inoremap <buffer> <silent> <End>  <C-o>g<End>
  endif
endfunction
